#!/usr/bin/env python
from __future__ import with_statement
import os
import re
import shutil
import subprocess
import sys
import tempfile


def system(*args, **kwargs):
    kwargs.setdefault('stdout', subprocess.PIPE)
    proc = subprocess.Popen(args, **kwargs)
    out, err = proc.communicate()
    return out


def main():
    modified = re.compile('^[AM]+\s+(?P<name>.*\.py)', re.MULTILINE)
    files = system('git', 'status', '--porcelain')
    files = modified.findall(files)

    tempdir = tempfile.mkdtemp()
    for name in files:
        filename = os.path.join(tempdir, name)
        filepath = os.path.dirname(filename)
        if not os.path.exists(filepath):
            os.makedirs(filepath)
        with file(filename, 'w') as f:
            system('git', 'show', ':' + name, stdout=f)
    try:
        output = system('pep8', '.', cwd=tempdir)
    except OSError:
        output =  "You should install the pep8 style checker to be able"\
              " to commit in this repo.\nIt allow us to garantee that "\
              "anything that is commited respects the pep8 coding style "\
              "standard.\nYou can install it:\n"\
              "  * on ubuntu, debian: $sudo apt-get install pep8 \n"\
              "  * on fedora: #yum install python-pep8 \n"\
              "  * Or add the official pep8 from http://www.python.org/dev/peps/pep-0008/"\
              " in your $PATH"

    shutil.rmtree(tempdir)
    if output:
        print output,
        sys.exit(1)


if __name__ == '__main__':
    main()
